{"version":3,"sources":["components/header/header.js","components/main/main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Main","useState","num","setNum","score","setScore","highscore","setHighscore","message","setMessage","inputValue","setInputValue","Math","trunc","random","secretNumber","setSecretNumber","status","setStatus","onClick","type","onChange","e","Number","target","value","pattern","console","log","prev","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKAWeA,EATA,WACb,OACE,mCACE,kDACA,mBAAGC,UAAU,UAAb,oC,OCiFSC,EArFF,WACX,MAAsBC,mBAAS,KAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,KAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,mBAAS,qBAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAwCV,oBACrCW,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GADpC,mBAAOC,EAAP,KAAqBC,EAArB,KAGA,EAA4Bf,oBAAS,GAArC,mBAAOgB,EAAP,KAAeC,EAAf,KA4CA,OACE,uBAAMnB,UAAS,UAAKkB,EAAS,UAAY,IAAzC,UACE,wBAAQlB,UAAU,YAAYoB,QAfb,WACnBH,EAAgBJ,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GACjDX,EAAO,KACPE,EAAS,MACTI,EAAW,qBACXE,EAAc,IACdO,GAAU,GAENd,EAAQE,GACVC,EAAaH,IAMb,oBAGA,qBAAKL,UAAS,iBAAYkB,EAAS,aAAe,IAAlD,SAAyDf,IACzD,0BAASH,UAAU,OAAnB,UACE,uBACEqB,KAAK,SACLrB,UAAU,QACVsB,SApDa,SAACC,GACpBX,EAAcY,OAAOD,EAAEE,OAAOC,SAoDxBA,MAAOf,EACPgB,QAAQ,UAEV,wBAAQ3B,UAAU,YAAYoB,QApDf,WACnBQ,QAAQC,IAAIb,GACZY,QAAQC,IAAIlB,GAERA,IAAeK,IACbX,EAAQ,GACVK,EAAWC,EAAaK,EAAe,yBAAiB,yBACxDV,GAAS,SAACwB,GAAD,OAAUA,EAAO,MACP,IAAVzB,IACTK,EAAW,mCACXJ,EAAS,QAITkB,OAAOb,IAAe,GAAKa,OAAOb,GAAc,IAClDD,EAAW,2BACXJ,GAAS,SAACwB,GAAD,OAAUA,EAAO,MACjBnB,IAAeK,IACxBN,EAAW,gCACXS,GAAU,GACVX,EAAaH,GACbD,EAAOY,KA+BL,uBAKF,0BAAShB,UAAU,QAAnB,UACE,mBAAGA,UAAU,UAAb,SAAwBS,IACxB,oBAAGT,UAAU,cAAb,iCACY,sBAAMA,UAAU,QAAhB,SAAyBK,OAErC,oBAAGL,UAAU,kBAAb,qCACgB,sBAAMA,UAAU,YAAhB,SAA6BO,c,MCjEtCwB,MATf,WACE,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCESgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fc3a3149.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Guess My Number!</h1>\n      <p className=\"between\">(Between 1 and 20)</p>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n\nconst Main = () => {\n  const [num, setNum] = useState(\"?\");\n  const [score, setScore] = useState(\"20\");\n  const [highscore, setHighscore] = useState(\"0\");\n  const [message, setMessage] = useState(\"Start guessing...\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [secretNumber, setSecretNumber] = useState(\n    +Math.trunc(Math.random() * 20) + 1\n  );\n  const [status, setStatus] = useState(false);\n\n  const inputHandler = (e) => {\n    setInputValue(Number(e.target.value));\n  };\n\n  const checkHandler = () => {\n    console.log(secretNumber);\n    console.log(inputValue);\n\n    if (inputValue !== secretNumber) {\n      if (score > 0) {\n        setMessage(inputValue > secretNumber ? \"📈 Too high!\" : \"📉 Too low!\");\n        setScore((prev) => prev - 1);\n      } else if (score === 0) {\n        setMessage(\"💥 You lost the game!\");\n        setScore(\"20\");\n      }\n    }\n\n    if (Number(inputValue) <= 0 || Number(inputValue) > 20) {\n      setMessage(\"⛔️ Incorrect!\");\n      setScore((prev) => prev + 1);\n    } else if (inputValue === secretNumber) {\n      setMessage(\"🎉 Correct Number!\");\n      setStatus(true);\n      setHighscore(score);\n      setNum(secretNumber);\n    }\n  };\n\n  const againHandler = () => {\n    setSecretNumber(Math.trunc(Math.random() * 20) + 1);\n    setNum(\"?\");\n    setScore(\"20\");\n    setMessage(\"Start guessing...\");\n    setInputValue(\"\");\n    setStatus(false);\n\n    if (score > highscore) {\n      setHighscore(score);\n    }\n  };\n\n  return (\n    <main className={`${status ? \"correct\" : \"\"}`}>\n      <button className=\"btn again\" onClick={againHandler}>\n        Again!\n      </button>\n      <div className={`number ${status ? \"correctNum\" : \"\"}`}>{num}</div>\n      <section className=\"left\">\n        <input\n          type=\"number\"\n          className=\"guess\"\n          onChange={inputHandler}\n          value={inputValue}\n          pattern=\"[0-9]\"\n        />\n        <button className=\"btn check\" onClick={checkHandler}>\n          Check!\n        </button>\n      </section>\n\n      <section className=\"right\">\n        <p className=\"message\">{message}</p>\n        <p className=\"label-score\">\n          💯 Score: <span className=\"score\">{score}</span>\n        </p>\n        <p className=\"label-highscore\">\n          🥇 Highscore: <span className=\"highscore\">{highscore}</span>\n        </p>\n      </section>\n    </main>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nimport Header from \"./components/header/header\";\nimport Main from \"./components/main/main\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"../css/app.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}